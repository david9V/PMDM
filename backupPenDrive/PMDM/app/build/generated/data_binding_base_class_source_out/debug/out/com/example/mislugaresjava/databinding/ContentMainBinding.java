// Generated by view binder compiler. Do not edit!
package com.example.mislugaresjava.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mislugaresjava.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Button bAcercaDe;

  @NonNull
  public final Button bPreferencias;

  @NonNull
  public final Button bSalir;

  @NonNull
  public final Button button01;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout linearLayout;

  private ContentMainBinding(@NonNull View rootView, @NonNull Button bAcercaDe,
      @NonNull Button bPreferencias, @NonNull Button bSalir, @NonNull Button button01,
      @Nullable ConstraintLayout linearLayout) {
    this.rootView = rootView;
    this.bAcercaDe = bAcercaDe;
    this.bPreferencias = bPreferencias;
    this.bSalir = bSalir;
    this.button01 = button01;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bAcercaDe;
      Button bAcercaDe = ViewBindings.findChildViewById(rootView, id);
      if (bAcercaDe == null) {
        break missingId;
      }

      id = R.id.bPreferencias;
      Button bPreferencias = ViewBindings.findChildViewById(rootView, id);
      if (bPreferencias == null) {
        break missingId;
      }

      id = R.id.bSalir;
      Button bSalir = ViewBindings.findChildViewById(rootView, id);
      if (bSalir == null) {
        break missingId;
      }

      id = R.id.button01;
      Button button01 = ViewBindings.findChildViewById(rootView, id);
      if (button01 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = ViewBindings.findChildViewById(rootView, id);

      return new ContentMainBinding(rootView, bAcercaDe, bPreferencias, bSalir, button01,
          linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
